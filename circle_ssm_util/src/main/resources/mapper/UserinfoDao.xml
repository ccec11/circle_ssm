<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.geminix.circle.util.dao.UserinfoDao">

    <resultMap type="top.geminix.circle.util.entity.Userinfo" id="UserinfoMap">
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="userAccount" column="userAccount" jdbcType="VARCHAR"/>
        <result property="userPassword" column="userPassword" jdbcType="VARCHAR"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="userBirthday" column="userBirthday" jdbcType="OTHER"/>
        <result property="userImagePath" column="userImagePath" jdbcType="VARCHAR"/>
        <result property="userAddress" column="userAddress" jdbcType="VARCHAR"/>
        <result property="userContent" column="userContent" jdbcType="VARCHAR"/>
        <result property="userGender" column="userGender" jdbcType="VARCHAR"/>
        <result property="userToken" column="userToken" jdbcType="VARCHAR"/>
        <result property="userPhone" column="userPhone" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserinfoMap">
        select
        userId, userAccount, userPassword, userName, userBirthday, userImagePath, userAddress, userContent, userGender,
        userToken, userPhone
        from circle_blue.userinfo
        where userId = #{userid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserinfoMap">
        select
        userId, userAccount, userPassword, userName, userBirthday, userImagePath, userAddress, userContent, userGender,
        userToken, userPhone
        from circle_blue.userinfo
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserinfoMap">
        select
        userId, userAccount, userPassword, userName, userBirthday, userImagePath, userAddress, userContent, userGender,
        userToken, userPhone
        from circle_blue.userinfo
        <where>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="useraccount != null and useraccount != ''">
                and userAccount = #{useraccount}
            </if>
            <if test="userpassword != null and userpassword != ''">
                and userPassword = #{userpassword}
            </if>
            <if test="username != null and username != ''">
                and userName = #{username}
            </if>
            <if test="userbirthday != null">
                and userBirthday = #{userbirthday}
            </if>
            <if test="userimagepath != null and userimagepath != ''">
                and userImagePath = #{userimagepath}
            </if>
            <if test="useraddress != null and useraddress != ''">
                and userAddress = #{useraddress}
            </if>
            <if test="usercontent != null and usercontent != ''">
                and userContent = #{usercontent}
            </if>
            <if test="usergender != null and usergender != ''">
                and userGender = #{usergender}
            </if>
            <if test="usertoken != null and usertoken != ''">
                and userToken = #{usertoken}
            </if>
            <if test="userphone != null and userphone != ''">
                and userPhone = #{userphone}
            </if>
        </where>
    </select>

    <!--查询所有-->
    <select id="queryAll" resultMap="UserinfoMap">
        select
        userId, userAccount, userPassword, userName, userBirthday, userImagePath, userAddress, userContent, userGender,
        userToken, userPhone
        from circle_blue.userinfo
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userid" useGeneratedKeys="true">
        insert into circle_blue.userinfo(userAccount, userPassword, userName, userBirthday, userImagePath, userAddress,
        userContent, userGender, userToken, userPhone)
        values (#{useraccount}, #{userpassword}, #{username}, #{userbirthday}, #{userimagepath}, #{useraddress},
        #{usercontent}, #{usergender}, #{usertoken}, #{userphone})
    </insert>

    <insert id="insertBatch" keyProperty="userid" useGeneratedKeys="true">
        insert into circle_blue.userinfo(userAccount, userPassword, userName, userBirthday, userImagePath, userAddress,
        userContent, userGender, userToken, userPhone)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.useraccount}, #{entity.userpassword}, #{entity.username}, #{entity.userbirthday},
            #{entity.userimagepath}, #{entity.useraddress}, #{entity.usercontent}, #{entity.usergender},
            #{entity.usertoken}, #{entity.userphone})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userid" useGeneratedKeys="true">
        insert into circle_blue.userinfo(userAccount, userPassword, userName, userBirthday, userImagePath, userAddress,
        userContent, userGender, userToken, userPhone)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.useraccount}, #{entity.userpassword}, #{entity.username}, #{entity.userbirthday},
            #{entity.userimagepath}, #{entity.useraddress}, #{entity.usercontent}, #{entity.usergender},
            #{entity.usertoken}, #{entity.userphone})
        </foreach>
        on duplicate key update
        userAccount = values(userAccount) , userPassword = values(userPassword) , userName = values(userName) ,
        userBirthday = values(userBirthday) , userImagePath = values(userImagePath) , userAddress = values(userAddress)
        , userContent = values(userContent) , userGender = values(userGender) , userToken = values(userToken) ,
        userPhone = values(userPhone)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update circle_blue.userinfo
        <set>
            <if test="useraccount != null and useraccount != ''">
                userAccount = #{useraccount},
            </if>
            <if test="userpassword != null and userpassword != ''">
                userPassword = #{userpassword},
            </if>
            <if test="username != null and username != ''">
                userName = #{username},
            </if>
            <if test="userbirthday != null">
                userBirthday = #{userbirthday},
            </if>
            <if test="userimagepath != null and userimagepath != ''">
                userImagePath = #{userimagepath},
            </if>
            <if test="useraddress != null and useraddress != ''">
                userAddress = #{useraddress},
            </if>
            <if test="usercontent != null and usercontent != ''">
                userContent = #{usercontent},
            </if>
            <if test="usergender != null and usergender != ''">
                userGender = #{usergender},
            </if>
            <if test="usertoken != null and usertoken != ''">
                userToken = #{usertoken},
            </if>
            <if test="userphone != null and userphone != ''">
                userPhone = #{userphone},
            </if>
        </set>
        where userId = #{userid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from circle_blue.userinfo where userId = #{userid}
    </delete>

</mapper>